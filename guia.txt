//iniciamos proyecto desde terminal 


1_npx create-next-app@latest digitalhippo
cd digitalhippo
code . (abre vcb directamente el proyecto.)

2_borramos todo el contenido predeterminado principalmente en page.tsx.
instalamos shadcn, configuramos el layout y ya estariamos listos para arrancar.

<html lang="en" className="h-full">
      <body
       className={cn(
        "relative h-full font-sans antialiased", 
        inter.className
        )}>
        <main className="relative flex flex-col min-h-screen">
          <div className="flex-grow flex-1">
          {children}
          </div>
        </main>
        </body>
    </html>

creamos el primer componente MaxWidthwrapper, y aqui predefinimos la width maximo que va a tener la pagina y hacemos los types de ts asi evitamos problemas a futuro.


import { ReactNode } from "react";

const MaxWidthwrapper = ({
    className,
    children
}: {
    className?: string;
    children : ReactNode
}) => {
    return (
        <div className="mx-auto w-full max-w-screen-xl px-2.5 md:px-20">
            {children}
        </div>
    )
}



ponemos el contenido dinamico que utilizamos dentro de MaxWidthwrapper en nuestra pagina principal, importamos button de shadcn 


export default function Home() {
  return 
  <MaxWidthwrapper>
    <div className="py-20 mx-auto text-center flex flex-col items-center max-w-3xl">
<h1 className="text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl">
  Your marketplace for high-quality {""}
  <span className="text-blue-600">
    digital assets</span>
    .
    </h1>
    <p className="mt-6 text-lg max-w-prose text-muted-foreground">
      Welcome to DigitalHippo. Every asset on our 
      platform is verified by our team to ensure our 
      highest quality standards.</p>
    </div>
    <div className="flex flex-col sm:flex-row gap-4 mt-6">
<Link href='/products' >Browse Trending</Link>
    </div>
  </MaxWidthwrapper>
}

importamos lucifer-react (creamos los 3 iconos) , dentro de otro segundo componente MaxWidthwrapper

<section className="border-t border-gray-200 bg-gray-50">
    <MaxWidthwrapper className="py-20">
      <div className="grid grid-cols-1 gap-y-12 sm:grid-cols-2 sm:gap-x-6 lg:grid-cols-3 lg:gap-x-8 lg:gap-y-0">
        {perks.map((perk) => (
          <div key={perk.name} className="text-center md:flex md:items-start md:text-left lg:block lg:text-center">
            <div className="md:flex-shrink-0 flex justify-center">
              <div className="h-16 w-16 flex items-center justify-center rounded-full bg-blue-100 text-blue-900">
                {<perk.Icon className="w-1/3 h-1/3" />}
              </div>
            </div>
          </div>
          ))}
      </div>
    </MaxWidthwrapper>
  </section>
  </>

hasta aca llega la parte uno, la landingpage ya esta lista totalmente responsive y con componentes reutilizables.

Nuestra landing page quedo lista, empezo con lo que seria nuestra barra de navegacion creando un nuevo componente .

2_ aca ya creamos los componentes que utilizamos para la barra de navegacion, cuando se usa en dispositivos mobiles desaparece y tambien tiene todos los props correspondientes de ts para que no haya problemas

terminamos la barra de navegacion para estilo web, ahora empezariamos lo que seria la parte mobile, NavBar,NavItem,NavItems.









